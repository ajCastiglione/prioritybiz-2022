# This is a basic workflow to help you get started with Actions

name: Deploy To Server

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
    push:
        branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    build:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest
        container: tetraweb/php

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            - name: Get latest code
              uses: actions/checkout@v3

            # # Update OS
            # - name: Update OS
            #   run: apt-get update -qy

            # Add SSH key
            # - name: Add SSH key
            #   uses: shimataro/ssh-key-action@v2
            #   with:
            #       key: ${{ secrets.SSH_PRIVATE_KEY }}
            #       name: id_rsa
            #       known_hosts: ssh-keyscan -H ${{ secrets.FTP_HOST }} >> ~/.ssh/known_hosts

            # # Installs LFTP
            # - name: Install LFTP
            #   run: apt-get install -y lftp --force-yes

            # Cache node_modules
            - name: Cache
              id: cache
              uses: actions/cache@v3
              with:
                  # A list of files, directories, and wildcard patterns to cache and restore
                  path: node_modules
                  # An explicit key for restoring and saving the cache
                  key: node_modules

            # Installs NPM packages
            - name: Install deps
              if: steps.cache.outputs.cache-hit != 'true'
              run: npm install

            # Runs build command to compile assets
            - name: Compile assets
              run: npm run build

            # New deploy using rsync
            - name: Deploy compiled site
              uses: burnett01/rsync-deployments@5.2.1
              with:
                switches: -avzr -O --delete --no-perms --exclude ".git/" --exclude ".github/" --exclude "node_modules" --exclude "library/translation"
                path: ./
                remote_path: ~/applications/fuangfqvqn/public_html/wp-content/themes/mwd/
                remote_host: ${{ secrets.FTP_HOST }}
                remote_user: ${{ secrets.FTP_USERNAME }}
                remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

              # run: rsync -avz --delete \
              #       --exclude ".git/" \
              #       --exclude ".github/" \
              #       --exclude "node_modules" \
              #       --exclude "library/translations" \
              #       --rsh "ssh -i /root/.ssh/id_rsa -p 22" \
              #       . ${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_HOST }}:/applications/fuangfqvqn/public_html/wp-content/themes/mwd

            # # Pushes assets to dev site
            # - name: Deploy compiled site
            #   run: lftp -e " set sftp:auto-confirm yes; open -u ${{ secrets.FTP_USERNAME }},${{ secrets.FTP_PASSWORD }} -p 22 sftp://${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_HOST }}; mirror --exclude ^node_modules -X .* -X .*/ --reverse --verbose --delete . /applications/fuangfqvqn/public_html/wp-content/themes/mwd; bye"
